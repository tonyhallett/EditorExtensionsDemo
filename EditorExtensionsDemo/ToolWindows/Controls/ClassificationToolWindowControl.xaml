<UserControl x:Class="EditorExtensionsDemo.ClassificationToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:utilities="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
             xmlns:local="clr-namespace:EditorExtensionsDemo"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:windows="clr-namespace:System.Windows;assembly=WindowsBase"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:temp="clr-namespace:EditorExtensionsDemo.ToolWindows.Controls"
             toolkit:Themes.UseVsTheme="True"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             Name="MyToolWindow">
    <Grid>
        <Grid.Resources>
            <local:BoolToVisibilityConverter
                x:Key="BoolToHiddenConverter"
                TrueValue="Visible" 
                FalseValue="Hidden" />
            <utilities:BrushToColorConverter x:Key="BrushToColorConverter"/>
            <local:ColorToSolidColorBrushValueConverter x:Key="ColorToSolidColorBrushValueConverter"/>

        </Grid.Resources>
        <Grid>
            <Grid.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:TreeItem}"
                                          ItemsSource="{Binding Children}">
                    <local:ClassificationTreeItem DataContext="{Binding}"/>
                </HierarchicalDataTemplate>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="1*"/>
                <!--<RowDefinition/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <Label>Caret classification: </Label>
                <TextBlock Text="{Binding CaretClassificationViewModel.CaretClassification}" Margin="5"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Horizontal" DataContext="{Binding ClassificationFormatCategoryViewModel}">
                <Grid>
                    <TextBox Width="250" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="CategoryInputTextBox" Margin="5" Text="{Binding CategoryInput, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock IsHitTestVisible="False" Text="Add a category..." VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=CategoryInputTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Button Margin="10"
                    Content="Get IClassificationFormatMap" 
                    Command="{Binding CreateClassificationFormatMapCommand}"
                    CommandParameter="{Binding CategoryInput}"
                    />
                <Separator/>
                <Label>Switch category</Label>
                <ComboBox ItemsSource="{Binding Categories}" SelectedItem="{Binding SelectedCategory}"/>
                <Separator/>
                <CheckBox VerticalContentAlignment="Center" IsChecked="{Binding ShowExplicitTextProperties}" Content="Show Explicit Text Properties">
                    <CheckBox.ToolTip>
                        <TextBlock>Note that if no FontTypeface it will be taken from DefaultTextProperties.DefaultTextProperties</TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>
            </StackPanel>
            
            <!--<TreeView Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ClassificationTree}"/>-->

           
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Margin="10" Command="{Binding ClassificationTypesNotInRegistryViewModel.ShowClassificationTypesNotInRegistryCommand}" theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}">
                        <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Open}"/>
                    </Button>
                    
                </StackPanel>

                <temp:WpfListView
                    Grid.Row="1" 
                    DataContext="{Binding PriorityClassificationViewModel }"
                    >
                    <temp:WpfListView.Resources>
                        <local:AttachToPropertyCollection x:Key="DragDropAttached">
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.IsDragSourceProperty}" Value="True"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.IsDropTargetProperty}" Value="True"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.DropHandlerProperty}" Value="{Binding}"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.UseDefaultDragAdornerProperty}" Value="True"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.UseDefaultEffectDataTemplateProperty}" Value="True"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.DropTargetAdornerBrushProperty}" Value="{Binding DropTargetAdornerPenColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}}"/>
                            <local:AttachToProperty AttachedProperty="{x:Static dd:DragDrop.DragMouseAnchorPointProperty}">
                                <local:AttachToProperty.Value>
                                    <windows:Point X="-1" Y="1"/>
                                </local:AttachToProperty.Value>
                            </local:AttachToProperty>
                            <local:AttachToProperty AttachedProperty="{x:Static FrameworkElement.AllowDropProperty}" Value="True"/>
                        </local:AttachToPropertyCollection>
                        <DataTemplate DataType="{x:Type sys:Boolean}">
                            <CheckBox IsChecked="{Binding Mode=OneWay}" IsEnabled="False"/>
                        </DataTemplate>
                    </temp:WpfListView.Resources>

                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="Loaded">
                            <local:AttachToPropertyAction AttachToProperties="{StaticResource DragDropAttached}" ControlProperty="{x:Static temp:WpfListView.TrackingListViewProperty}"/>
                        </behaviors:EventTrigger>

                    </behaviors:Interaction.Triggers>

                </temp:WpfListView>
                <!--<ContentPresenter Grid.Row="1" Content="{Binding PriorityClassificationViewModel.WpfTableControl.Control}">
                    --><!--dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.DropTargetAdornerBrush="{Binding DropTargetAdornerPenColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}}"
                    dd:DragDrop.UseDefaultDragAdorner="True"
                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                    dd:DragDrop.DragMouseAnchorPoint="-1 1"--><!--
                    <ContentPresenter.Resources>
                        <DataTemplate DataType="{x:Type sys:Boolean}">
                            <CheckBox IsChecked="{Binding Mode=OneWay}" IsEnabled="False"/>
                        </DataTemplate>
                        
                    </ContentPresenter.Resources>
                </ContentPresenter>-->

                <!--<ListView 
                    Grid.Row="1" 
                    ItemsSource="{Binding PriorityClassifications}"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}"
                    dd:DragDrop.DropTargetAdornerBrush="{Binding DropTargetAdornerPenColor, Converter={StaticResource ColorToSolidColorBrushValueConverter}}"
                    dd:DragDrop.UseDefaultDragAdorner="True"
                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                    dd:DragDrop.DragMouseAnchorPoint="-1 1"
                    dd:DragDrop.UseVisualSourceItemSizeForDragAdorner="True"
                    
                >
                        <ListView.Style>
                            <Style TargetType="{x:Type ListView}"/>
                        </ListView.Style>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Is priority">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False" IsChecked="{Binding IsPriority, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Is null">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False" IsChecked="{Binding IsNull, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Classification">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Classification}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Is transient">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False" IsChecked="{Binding IsTransient, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Base types">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding BaseTypes}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="From ClassificationTypeDefinition">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False" IsChecked="{Binding HasClassificationTypeDefinition, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Has ClassificationFormatMetadata">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsEnabled="False" IsChecked="{Binding HasClassificationFormatMetadata, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Before">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Before}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="After">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding After}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Priority">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Priority}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Definition from">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DefinitionFrom}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>-->
            
            </Grid>
        </Grid>
    </Grid>
</UserControl>
